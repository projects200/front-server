name: CI/CD
on:
  push:
    paths:
      - "**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  client-CI-CD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4

      - name: Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Create .env.production
        run: |
          echo "PUBLIC_GTM_ID=${{ secrets.PUBLIC_GTM_ID }}" > .env.production

      - name: Build and Export
        run: |
          npm install
          npm run build
          
      - name: Configure AWS credentials
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Main S3 and Invalidate CloudFront cache
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          aws s3 sync ./out s3://${{ secrets.AWS_S3_CLIENT_MAIN_BUCKET_NAME }} --delete
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^out/.*' | sed 's/^/\//')
          if [ ! -z "$CHANGED_FILES" ]; then
            echo "Invalidating CloudFront cache for the following files: $CHANGED_FILES"
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.AWS_CLOUDFRONT_MAIN_DISTRIBUTION_ID }} \
              --paths $CHANGED_FILES
          else
            echo "No files changed, skipping CloudFront invalidation."
          fi
            
      - name: Deploy to Dev S3 and Invalidate CloudFront cache
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: |
          aws s3 sync ./out s3://${{ secrets.AWS_S3_CLIENT_DEV_BUCKET_NAME }} --delete
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^out/.*' | sed 's/^/\//')
          if [ ! -z "$CHANGED_FILES" ]; then
            echo "Invalidating CloudFront cache for the following files: $CHANGED_FILES"
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.AWS_CLOUDFRONT_DEV_DISTRIBUTION_ID }} \
              --paths $CHANGED_FILES
          else
            echo "No files changed, skipping CloudFront invalidation."
          fi

          
